# These settings are synced to GitHub by https://probot.github.io/apps/settings/

repository:
  # See https://docs.github.com/en/rest/reference/repos#update-a-repository for all available settings.

  # The name of the repository. Changing this will rename the repository
  # name: repo-name

  # A short description of the repository that will show up on GitHub
  # description: description of repo

  # A URL with more information about the repository
  # homepage: https://example.github.io/

  # A comma-separated list of topics to set on the repository
  # topics: github, probot

  # Either `true` to make the repository private, or `false` to make it public.
  # private: false

  # Either `true` to enable issues for this repository, `false` to disable them.
  has_issues: true

  # Either `true` to enable projects for this repository, or `false` to disable them.
  # If projects are disabled for the organization, passing `true` will cause an API error.
  has_projects: false

  # Either `true` to enable the wiki for this repository, `false` to disable it.
  has_wiki: false

  # Either `true` to enable downloads for this repository, `false` to disable them.
  has_downloads: true

  # Either `true` to enable discussions for this repository, `false` to disable them.
  has_discussions: false

  # Updates the default branch for this repository.
  default_branch: main

  # Either `true` to allow squash-merging pull requests, or `false` to prevent
  # squash-merging.
  allow_squash_merge: false

  # Either `true` to allow merging pull requests with a merge commit, or `false`
  # to prevent merging pull requests with merge commits.
  allow_merge_commit: true

  # Either `true` to allow rebase-merging pull requests, or `false` to prevent
  # rebase-merging.
  allow_rebase_merge: false

  # Either `true` to allow auto-merge on pull requests, or `false` to disallow auto-merge.
  allow_auto_merge: true

  # Either `true` to enable automatic deletion of branches on merge, or `false` to disable
  delete_branch_on_merge: true

  # Either `true` to always allow a pull request head branch that is behind its base branch to be updated even if it is not required to be up to date before merging, or `false` otherwise.
  allow_update_branch: true

  # Either `true` to enable automated security fixes, or `false` to disable
  # automated security fixes.
  enable_automated_security_fixes: false

  # Either `true` to enable vulnerability alerts, or `false` to disable
  # vulnerability alerts.
  enable_vulnerability_alerts: true

# Labels: define labels for Issues and Pull Requests
# labels:
#   - name: bug
#     color: CC0000
#     description: An issue with the system.
#
#   - name: feature
#     # If including a `#`, make sure to wrap it with quotes!
#     color: '#336699'
#     description: New functionality.
#
#   - name: Help Wanted
#     # Provide a new name to rename an existing label
#     new_name: first-timers-only

# Milestones: define milestones for Issues and Pull Requests
# milestones:
#   - title: milestone-title
#     description: milestone-description
#     # The state of the milestone. Either `open` or `closed`
#     state: open

# Collaborators: give specific users access to this repository.
# See https://docs.github.com/en/rest/reference/repos#add-a-repository-collaborator for available options
# collaborators:
#   # - username: bkeepers
#   #   permission: push
#   # - username: hubot
#   #   permission: pull
#
#   # Note: `permission` is only valid on organization-owned repositories.
#   # The permission to grant the collaborator. Can be one of:
#   # * `pull` - can pull, but not push to or administer this repository.
#   # * `push` - can pull and push, but not administer this repository.
#   # * `admin` - can pull, push and administer this repository.
#   # * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
#   # * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.

# See https://docs.github.com/en/rest/reference/teams#add-or-update-team-repository-permissions for available options
# teams:
#   - name: core
#     # The permission to grant the team. Can be one of:
#     # * `pull` - can pull, but not push to or administer this repository.
#     # * `push` - can pull and push, but not administer this repository.
#     # * `admin` - can pull, push and administer this repository.
#     # * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
#     # * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.
#     permission: admin
#   - name: docs
#     permission: push
rulesets:
  - name: Main
    target: branch
    source_type: Repository
    enforcement: active
    conditions:
      ref_name:
        exclude: []
        include:
          - ~DEFAULT_BRANCH
    rules:
      - type: deletion
      - type: non_fast_forward
      - type: code_scanning
        parameters:
          code_scanning_tools:
            - tool: CodeQL
              security_alerts_threshold: high_or_higher
              alerts_threshold: errors
      - type: required_status_checks
        parameters:
          strict_required_status_checks_policy: true
          do_not_enforce_on_create: false
          required_status_checks:
            - context: Test
              integration_id: 15368
      - type: pull_request
        parameters:
          required_approving_review_count: 0
          dismiss_stale_reviews_on_push: true
          require_code_owner_review: false
          require_last_push_approval: false
          required_review_thread_resolution: false
          automatic_copilot_code_review_enabled: false
          allowed_merge_methods: [merge]

    bypass_actors: []
    current_user_can_bypass: never
